/**
 * generated by Xtext 2.23.0
 */
package fr.n7.pDL1.impl;

import fr.n7.pDL1.PDL1Package;
import fr.n7.pDL1.Ressource;
import fr.n7.pDL1.RessourceUsed;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ressource Used</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.pDL1.impl.RessourceUsedImpl#getOcc <em>Occ</em>}</li>
 *   <li>{@link fr.n7.pDL1.impl.RessourceUsedImpl#getRessourceUsed <em>Ressource Used</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RessourceUsedImpl extends MinimalEObjectImpl.Container implements RessourceUsed
{
  /**
   * The default value of the '{@link #getOcc() <em>Occ</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOcc()
   * @generated
   * @ordered
   */
  protected static final int OCC_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getOcc() <em>Occ</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOcc()
   * @generated
   * @ordered
   */
  protected int occ = OCC_EDEFAULT;

  /**
   * The cached value of the '{@link #getRessourceUsed() <em>Ressource Used</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRessourceUsed()
   * @generated
   * @ordered
   */
  protected Ressource ressourceUsed;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RessourceUsedImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PDL1Package.Literals.RESSOURCE_USED;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getOcc()
  {
    return occ;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOcc(int newOcc)
  {
    int oldOcc = occ;
    occ = newOcc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDL1Package.RESSOURCE_USED__OCC, oldOcc, occ));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Ressource getRessourceUsed()
  {
    if (ressourceUsed != null && ressourceUsed.eIsProxy())
    {
      InternalEObject oldRessourceUsed = (InternalEObject)ressourceUsed;
      ressourceUsed = (Ressource)eResolveProxy(oldRessourceUsed);
      if (ressourceUsed != oldRessourceUsed)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PDL1Package.RESSOURCE_USED__RESSOURCE_USED, oldRessourceUsed, ressourceUsed));
      }
    }
    return ressourceUsed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Ressource basicGetRessourceUsed()
  {
    return ressourceUsed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRessourceUsed(Ressource newRessourceUsed)
  {
    Ressource oldRessourceUsed = ressourceUsed;
    ressourceUsed = newRessourceUsed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDL1Package.RESSOURCE_USED__RESSOURCE_USED, oldRessourceUsed, ressourceUsed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PDL1Package.RESSOURCE_USED__OCC:
        return getOcc();
      case PDL1Package.RESSOURCE_USED__RESSOURCE_USED:
        if (resolve) return getRessourceUsed();
        return basicGetRessourceUsed();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PDL1Package.RESSOURCE_USED__OCC:
        setOcc((Integer)newValue);
        return;
      case PDL1Package.RESSOURCE_USED__RESSOURCE_USED:
        setRessourceUsed((Ressource)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PDL1Package.RESSOURCE_USED__OCC:
        setOcc(OCC_EDEFAULT);
        return;
      case PDL1Package.RESSOURCE_USED__RESSOURCE_USED:
        setRessourceUsed((Ressource)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PDL1Package.RESSOURCE_USED__OCC:
        return occ != OCC_EDEFAULT;
      case PDL1Package.RESSOURCE_USED__RESSOURCE_USED:
        return ressourceUsed != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (occ: ");
    result.append(occ);
    result.append(')');
    return result.toString();
  }

} //RessourceUsedImpl
